\frametitle{Interfacing with ATmega2560}
\framesubtitle{Code (contd.)}
%1:
%Moving on to the main function, first we initialize the IO ports for the stepper motor.
%2:
%Then, we setup Timer1 with our the configuration we decided upon. To do this, we first temporarily disable all interrupts while setting up and set Timer1 to work in CTC mode by setting WGM bits to 0100 in the TCCR1B register. Only WGM12 is set as the other WGM bits are by default zero. Then the Output Compare Match Interrupt for Timer1 is enabled by setting bit OCIE1A in the TIMSK1 register. Finally we re-enable all the interrupts after initialisation
%3:
%We then set the TOP value in the OCR1A register using the given formula. Here F_CPU and SPEED are previously defined constant whose values are 14745600 and 300 respectively.
%4:
%Then we finally start the timer by setting the prescaler to 1 through the CS12, CS11 and CS10 bits in the TCCR1B register.
%5:
%Then we handover the job to the interrupts and thus let the processor go into an infinite loop.
\begin{block}<1->{Main Program}
\begin{semiverbatim}
\scriptsize{
int main(void)
\{
    stepper\_port\_init(); \color{comment}//Initialize ports\color{black}
\pause
    cli(); \color{comment}//Clear global interrupts\color{black}
    TCCR1B |= (1 << WGM12); \color{comment}//CTC mode (WGM13:0 = 0100)\color{black}
    TIMSK1 |= (1 << OCIE1A); \color{comment}//Enable CTC interrupt\color{black}
    sei(); \color{comment}//Enable global interrupts\color{black}
\pause
    OCR1A = (F\_CPU / SPEED) - 1; \color{comment}//Set TOP\color{black}
\pause
    \color{comment}//Prescalar = 1\color{black}
    TCCR1B |= ((0 << CS12) | (0 << CS11) | (1 << CS10));
\pause
    while(1);
\}
}
\end{semiverbatim}
\end{block}
